// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnoKala.DaytaLayer.Contex;

#nullable disable

namespace TechnoKala.DaytaLayer.Migrations
{
    [DbContext(typeof(AppDbContex))]
    [Migration("20250531113148_Init_AdminRole")]
    partial class Init_AdminRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5291d62-fd8a-464d-beab-e7a387ff153b"),
                            Name = "Blog.Create"
                        },
                        new
                        {
                            Id = new Guid("2c96c072-bf1c-4c07-85c2-993a701e8a9b"),
                            Name = "Blog.Edit"
                        },
                        new
                        {
                            Id = new Guid("21627407-2b62-43cc-8e61-2c1404d74c9b"),
                            Name = "Blog.Delete"
                        });
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3a877eb-9fff-46f4-8cc4-0928dfff474c"),
                            Title = "مدیر کل"
                        },
                        new
                        {
                            Id = new Guid("1c8a9e06-b1ca-47c9-b595-70a5e7b93223"),
                            Title = "ویرایشگر محتوا"
                        });
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("a3a877eb-9fff-46f4-8cc4-0928dfff474c"),
                            PermissionId = new Guid("f5291d62-fd8a-464d-beab-e7a387ff153b")
                        },
                        new
                        {
                            RoleId = new Guid("a3a877eb-9fff-46f4-8cc4-0928dfff474c"),
                            PermissionId = new Guid("2c96c072-bf1c-4c07-85c2-993a701e8a9b")
                        },
                        new
                        {
                            RoleId = new Guid("a3a877eb-9fff-46f4-8cc4-0928dfff474c"),
                            PermissionId = new Guid("21627407-2b62-43cc-8e61-2c1404d74c9b")
                        },
                        new
                        {
                            RoleId = new Guid("1c8a9e06-b1ca-47c9-b595-70a5e7b93223"),
                            PermissionId = new Guid("2c96c072-bf1c-4c07-85c2-993a701e8a9b")
                        });
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("blog_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("dleated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_dleated")
                        .HasColumnType("bit");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("blogs");
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Blog_Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dleated_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_dleated")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("parent_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("blog_Categories");
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Faq", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dleated_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_dleated")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("faqs");
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Team", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dleated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_dleated")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dleated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_dleated")
                        .HasColumnType("bit");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Admin", b =>
                {
                    b.HasOne("TechnoKala.DataLayer.Entities.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.RolePermission", b =>
                {
                    b.HasOne("TechnoKala.DataLayer.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnoKala.DataLayer.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechnoKala.DaytaLayer.Entities.Blog", b =>
                {
                    b.HasOne("TechnoKala.DaytaLayer.Entities.Blog_Category", "blog_Category")
                        .WithMany()
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("blog_Category");
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("TechnoKala.DataLayer.Entities.Role", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
